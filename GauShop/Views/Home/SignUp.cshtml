

<section class="sign-in-form section-padding">
    <div class="container">
        <div class="row">

            <div class="col-lg-8 mx-auto col-12">

                <h1 class="hero-title text-center mb-5">Sign Up</h1>

                <div class="div-separator w-50 m-auto my-5"><span>or</span></div>

                <div class="row">
                    <div class="col-lg-8 col-11 mx-auto">
                        @if (!string.IsNullOrEmpty(TempData["notification"] as string))
                        {
                            <script>alert('@TempData["notification"]');</script>
                        }
                        <form role="form" method="post" action="@Url.Action("HandleSignUp","SignUp")">
                            <style>
                                .form-floating label{
                                    color: black;
                                }
                            </style>
                            <div class="error-message">
                                @if (!string.IsNullOrEmpty(@TempData["ErrorMessage"] as string))
                                {
                                    <p style="color: red;">@TempData["ErrorMessage"]</p>
                                }
                                <p style="color: red; display: none;"></p>
                            </div>
                            <div class="form-floating">
                                <input type="text" name="name" id="name" class="form-control" placeholder="Name" required>
                                <label for="name">Name</label>
                            </div>
                            <div class="form-floating my-4">
                                <input type="email" name="email" id="email"  class="form-control" placeholder="Email address" required >
                                <label for="email">Email address</label>
                            </div>
                            <div class="form-floating my-4">
                                <input type="password" name="password" id="password" class="form-control" placeholder="Password" required>
                                <label for="password">Password</label>
                            </div>
                            <div class="form-floating">
                                <input type="password" name="confirm_password" id="confirm_password" class="form-control" placeholder="Password" required>
                                <label for="confirm_password">Password Confirmation</label>
                            </div>

                            <button type="submit" id="btnCreateAccount" class="btn custom-btn form-control mt-4 mb-3">
                                Create account
                            </button>

                        <p class="text-center">Already have an account? <a asp-controller="SignIn" asp-action="ViewSignIn"><span style="color: black;">Sign In</span></a></p>

                        </form>
                    </div>
                </div>
                            
            </div>

        </div>
    </div>
</section>

   

<script>
var nameInput = document.getElementById('name');
var emailInput = document.getElementById('email');
var passwordInput = document.getElementById('password');
var confirmPasswordInput = document.getElementById('confirm_password');
var formInput = document.querySelector('form');
var submitButton = document.getElementById('btnCreateAccount');
var error_message = document.querySelector('.error-message p');

nameInput.addEventListener('input', function () {
var name_value = nameInput.value;

if (name_value === null ) {
    error_message.textContent = "Name cannot be empty";
    error_message.style.display = 'block';
} else if (/[^a-zA-Z0-9]/.test(name_value)) {
    error_message.textContent = "Name cannot contain special characters";
    error_message.style.display = 'block';
} else {
    error_message.textContent = "";
    error_message.style.display = 'none';
}
});

passwordInput.addEventListener('input', function () {
var password_value = passwordInput.value;
var password_pattern = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[^\w\s]).{8,}$/;
if (!password_pattern.test(password_value)) {
    error_message.textContent = "Password must contain at least one uppercase letter, one lowercase letter, one digit, one special character, and be at least 8 characters long";
    error_message.style.display = 'block';
}else if (passwordInput.value !== confirmPasswordInput.value) {
    error_message.textContent = "Password and confirm password do not match.";
    error_message.style.display = 'block';
} else {
    error_message.textContent = "";
    error_message.style.display = 'none';
}
});

confirmPasswordInput.addEventListener('input', function (){
var password_pattern = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[^\w\s]).{8,}$/;
if (!password_pattern.test(confirmPasswordInput.value)) {
    error_message.textContent = "Password must contain at least one uppercase letter, one lowercase letter, one digit, one special character, and be at least 8 characters long";
    error_message.style.display = 'block';
}else if (passwordInput.value !== confirmPasswordInput.value) {
    error_message.textContent = "Password and confirm password do not match.";
    error_message.style.display = 'block';
} else {
    error_message.textContent = "";
    error_message.style.display = 'none';
}
});

formInput.addEventListener('submit', function (event) {
if (error_message.textContent === "" && error_message.style.display === 'none') {
    submitButton.disabled = false;
}else {
    event.preventDefault();
    document.querySelector('.btn.custom-btn.form-control').style.background = '#000000';
    document.querySelector('.btn.custom-btn.form-control').style.color = '#FFFFFF';
    var button = document.querySelector('.btn.custom-btn.form-control');
    button.addEventListener('mouseenter', function () {
        button.style.background = '#FF4400';
    });
    button.addEventListener('mouseleave', function () {
        button.style.background = '#000000';
    });
}
});

</script>
